unit eBay_Orders_Trans_Buyer_Sellinfo;
  {
   Date     Version  Who  What
  -------- -------- ---  ------------------------------------------------------
  28/06/13  1.00.00  A.  Initial Version.
  }

interface
uses DB, Classes, eBayBaseObj ;
type
  Tebay_orders_trans_buyer_SellerInfo = class(TeBayObjBase)
  private
    function GetOrderID                                     : Integer   ;
    function GetOrders_Trans_Id                             : Integer   ;
    function GetOrders_Trans_buyer_Id                       : Integer   ;
    Function GetPaisaPayStatus: Integer ;
    Function GetAllowPaymentEdit: Boolean ;
    Function GetBillingCurrency: String ;
    Function GetCheckoutEnabled: Boolean ;
    Function GetCIPBankAccountStored: Boolean ;
    Function GetGoodStanding: Boolean ;
    Function GetMerchandizingPref: String ;
    Function GetQualifiesForB2BVAT: Boolean ;
    Function GetSellerGuaranteeLevel: String ;
    Function GetSellerLevel: String ;
    Function GetStoreOwner: Boolean ;
    Function GetStoreURL: string ;
    Function GetSellerBusinessType: string ;
    Function GetRegisteredBusinessSeller: Boolean ;
    Function GetStoreSite: string ;
    Function GetCharityRegistered: Boolean ;
    Function GetSafePaymentExempt: Boolean ;
    Function GetPaisaPayEscrowEMIStatus: Integer ;
    Function GetTransactionPercent: Single ;
    Function GetTopRatedSeller: Boolean ;
    Function GetDomesticRateTable: Boolean ;
    Function GetInternationalRateTable: Boolean ;
    Function GetSellereBayPaymentProcessStatus: String ;
    Function GetPaymentMethod:String;
    Function GetSellerPaymentAddress_Name_: String ;
    Function GetSellerPaymentAddress_Street: String ;
    Function GetSellerPaymentAddress_Street1: String;
    Function GetSellerPaymentAddress_Street2: String ;
    Function GetSellerPaymentAddress_CityName: String ;
    Function GetSellerPaymentAddress_County: String ;
    Function GetSellerPaymentAddress_StateOrProvince: String ;
    Function GetSellerPaymentAddress_Country: String ;
    Function GetSellerPaymentAddress_CountryName: String ;
    Function GetSellerPaymentAddress_Phone: String ;
    Function GetSellerPaymentAddress_PhoneCountryCode: String ;
    Function GetSellerPaymentAddress_PhoneCountryPrefix: String;
    Function GetSellerPaymentAddress_PhoneAreaOrCityCode: String ;
    Function GetSellerPaymentAddress_PhoneLocalNumber: String ;
    Function GetSellerPaymentAddress_Phone2CountryCode: String ;
    Function GetSellerPaymentAddress_Phone2CountryPrefix: String ;
    Function GetSellerPaymentAddress_Phone2AreaOrCityCode: String ;
    Function GetSellerPaymentAddress_Phone2LocalNumber: String ;
    Function GetSellerPaymentAddress_PostalCode: String ;
    Function GetSellerPaymentAddress_AddressID: String ;
    Function GetSellerPaymentAddress_AddressOwner: String ;
    Function GetSellerPaymentAddress_AddressStatus: String ;
    Function GetSellerPaymentAddress_ExternalAddressID: String ;
    Function GetSellerPaymentAddress_InternationalName: String ;
    Function GetSellerPaymentAddress_InternationalStateAndCity: String ;
    Function GetSellerPaymentAddress_InternationalStreet: String ;
    Function GetSellerPaymentAddress_CompanyName: String ;
    Function GetSellerPaymentAddress_AddressRecordType: String ;
    Function GetSellerPaymentAddress_FirstName: String ;
    Function GetSellerPaymentAddress_LastName: String ;
    Function GetSellerPaymentAddress_Phone2: String ;
    Function GetSellerPaymentAddress_AddressUsage: String ;
    Function GetSellerPaymentAddress_ReferenceID: String ;
    Function GetSchedulingInfo_MaxScheduledMinutes: Integer ;
    Function GetSchedulingInfo_MinScheduledMinutes: Integer ;
    Function GetSchedulingInfo_MaxScheduledItems: Integer ;
    Function GetFeatureEligibility_QualifiesForBuyItNow: Boolean ;
    Function GetFeatureEligibility_QualifiesForBuyItNowMultiple: Boolean ;
    Function GetFeatureEligibility_QualifiedForFixedPriceOneDayDuration: Boolean ;
    Function GetFeatureEligibility_QualifiesForVariations: Boolean ;
    Function GetFeatureEligibility_QualifiedForAuctionOneDayDuration: Boolean ;
    Function GetSellereBayPaymentProcessConsent_PayoutMethodSet: Boolean ;
    Function GetSellereBayPaymentProcessConsent_PayoutMethod: String;

    procedure SetOrderID                                     (const Value: Integer    );
    procedure SetOrders_Trans_Id                             (const Value: Integer   );
    procedure SetOrders_Trans_buyer_Id                       (const Value: Integer   );
    Procedure SetPaisaPayStatus(Const Value : Integer );
    Procedure SetAllowPaymentEdit(Const Value : Boolean );
    Procedure SetBillingCurrency(Const Value : String );
    Procedure SetCheckoutEnabled(Const Value : Boolean );
    Procedure SetCIPBankAccountStored(Const Value : Boolean );
    Procedure SetGoodStanding(Const Value : Boolean );
    Procedure SetMerchandizingPref(Const Value : String );
    Procedure SetQualifiesForB2BVAT(Const Value : Boolean );
    Procedure SetSellerGuaranteeLevel(Const Value : String );
    Procedure SetSellerLevel(Const Value : String );
    Procedure SetStoreOwner(Const Value : Boolean );
    Procedure SetStoreURL(Const Value : string );
    Procedure SetSellerBusinessType(Const Value : string );
    Procedure SetRegisteredBusinessSeller(Const Value : Boolean );
    Procedure SetStoreSite(Const Value : string );
    Procedure SetCharityRegistered(Const Value : Boolean );
    Procedure SetSafePaymentExempt(Const Value : Boolean );
    Procedure SetPaisaPayEscrowEMIStatus(Const Value : Integer );
    Procedure SetTransactionPercent(Const Value : Single );
    Procedure SetTopRatedSeller(Const Value : Boolean );
    Procedure SetDomesticRateTable(Const Value : Boolean );
    Procedure SetInternationalRateTable(Const Value : Boolean );
    Procedure SetSellereBayPaymentProcessStatus(Const Value : String );
    Procedure SetPaymentMethod(Const Value :String);
    Procedure SetSellerPaymentAddress_Name_(Const Value : String );
    Procedure SetSellerPaymentAddress_Street(Const Value : String );
    Procedure SetSellerPaymentAddress_Street1(Const Value : String);
    Procedure SetSellerPaymentAddress_Street2(Const Value : String );
    Procedure SetSellerPaymentAddress_CityName(Const Value : String );
    Procedure SetSellerPaymentAddress_County(Const Value : String );
    Procedure SetSellerPaymentAddress_StateOrProvince(Const Value : String );
    Procedure SetSellerPaymentAddress_Country(Const Value : String );
    Procedure SetSellerPaymentAddress_CountryName(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone(Const Value : String );
    Procedure SetSellerPaymentAddress_PhoneCountryCode(Const Value : String );
    Procedure SetSellerPaymentAddress_PhoneCountryPrefix(Const Value : String);
    Procedure SetSellerPaymentAddress_PhoneAreaOrCityCode(Const Value : String );
    Procedure SetSellerPaymentAddress_PhoneLocalNumber(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone2CountryCode(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone2CountryPrefix(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone2AreaOrCityCode(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone2LocalNumber(Const Value : String );
    Procedure SetSellerPaymentAddress_PostalCode(Const Value : String );
    Procedure SetSellerPaymentAddress_AddressID(Const Value : String );
    Procedure SetSellerPaymentAddress_AddressOwner(Const Value : String );
    Procedure SetSellerPaymentAddress_AddressStatus(Const Value : String );
    Procedure SetSellerPaymentAddress_ExternalAddressID(Const Value : String );
    Procedure SetSellerPaymentAddress_InternationalName(Const Value : String );
    Procedure SetSellerPaymentAddress_InternationalStateAndCity(Const Value : String );
    Procedure SetSellerPaymentAddress_InternationalStreet(Const Value : String );
    Procedure SetSellerPaymentAddress_CompanyName(Const Value : String );
    Procedure SetSellerPaymentAddress_AddressRecordType(Const Value : String );
    Procedure SetSellerPaymentAddress_FirstName(Const Value : String );
    Procedure SetSellerPaymentAddress_LastName(Const Value : String );
    Procedure SetSellerPaymentAddress_Phone2(Const Value : String );
    Procedure SetSellerPaymentAddress_AddressUsage(Const Value : String );
    Procedure SetSellerPaymentAddress_ReferenceID(Const Value : String );
    Procedure SetSchedulingInfo_MaxScheduledMinutes(Const Value : Integer );
    Procedure SetSchedulingInfo_MinScheduledMinutes(Const Value : Integer );
    Procedure SetSchedulingInfo_MaxScheduledItems(Const Value : Integer );
    Procedure SetFeatureEligibility_QualifiesForBuyItNow(Const Value : Boolean );
    Procedure SetFeatureEligibility_QualifiesForBuyItNowMultiple(Const Value : Boolean );
    Procedure SetFeatureEligibility_QualifiedForFixedPriceOneDayDuration(Const Value : Boolean );
    Procedure SetFeatureEligibility_QualifiesForVariations(Const Value : Boolean );
    Procedure SetFeatureEligibility_QualifiedForAuctionOneDayDuration(Const Value : Boolean );
    Procedure SetSellereBayPaymentProcessConsent_PayoutMethodSet(Const Value : Boolean );
    Procedure SetSellereBayPaymentProcessConsent_PayoutMethod(Const Value : String);
  protected
  public
    constructor  Create(AOwner: TComponent); override;
  published
    property OrderID                                      :Integer      read GetOrderID                                    write SetOrderID                                 ;
    property Orders_Trans_Id                              :Integer     read GetOrders_Trans_Id                            write SetOrders_Trans_Id                         ;
    property Orders_Trans_buyer_Id                        :Integer     read GetOrders_Trans_buyer_Id                      write SetOrders_Trans_buyer_Id                   ;
    Property PaisaPayStatus: Integer read getPaisaPayStatus Write SetPaisaPayStatus;
    Property AllowPaymentEdit: Boolean read getAllowPaymentEdit Write SetAllowPaymentEdit;
    Property BillingCurrency: String read getBillingCurrency Write SetBillingCurrency;
    Property CheckoutEnabled: Boolean read getCheckoutEnabled Write SetCheckoutEnabled;
    Property CIPBankAccountStored: Boolean read getCIPBankAccountStored Write SetCIPBankAccountStored;
    Property GoodStanding: Boolean read getGoodStanding Write SetGoodStanding;
    Property MerchandizingPref: String read getMerchandizingPref Write SetMerchandizingPref;
    Property QualifiesForB2BVAT: Boolean read getQualifiesForB2BVAT Write SetQualifiesForB2BVAT;
    Property SellerGuaranteeLevel: String read getSellerGuaranteeLevel Write SetSellerGuaranteeLevel;
    Property SellerLevel: String read getSellerLevel Write SetSellerLevel;
    Property StoreOwner: Boolean read getStoreOwner Write SetStoreOwner;
    Property StoreURL: string read getStoreURL Write SetStoreURL;
    Property SellerBusinessType: string read getSellerBusinessType Write SetSellerBusinessType;
    Property RegisteredBusinessSeller: Boolean read getRegisteredBusinessSeller Write SetRegisteredBusinessSeller;
    Property StoreSite: string read getStoreSite Write SetStoreSite;
    Property CharityRegistered: Boolean read getCharityRegistered Write SetCharityRegistered;
    Property SafePaymentExempt: Boolean read getSafePaymentExempt Write SetSafePaymentExempt;
    Property PaisaPayEscrowEMIStatus: Integer read getPaisaPayEscrowEMIStatus Write SetPaisaPayEscrowEMIStatus;
    Property TransactionPercent: Single read getTransactionPercent Write SetTransactionPercent;
    Property TopRatedSeller: Boolean read getTopRatedSeller Write SetTopRatedSeller;
    Property DomesticRateTable: Boolean read getDomesticRateTable Write SetDomesticRateTable;
    Property InternationalRateTable: Boolean read getInternationalRateTable Write SetInternationalRateTable;
    Property SellereBayPaymentProcessStatus: String read getSellereBayPaymentProcessStatus Write SetSellereBayPaymentProcessStatus;
    Property PaymentMethod:String read getPaymentMethod Write SetPaymentMethod;
    Property SellerPaymentAddress_Name_: String read getSellerPaymentAddress_Name_ Write SetSellerPaymentAddress_Name_;
    Property SellerPaymentAddress_Street: String read getSellerPaymentAddress_Street Write SetSellerPaymentAddress_Street;
    Property SellerPaymentAddress_Street1: String read getSellerPaymentAddress_Street1 Write SetSellerPaymentAddress_Street1;
    Property SellerPaymentAddress_Street2: String read getSellerPaymentAddress_Street2 Write SetSellerPaymentAddress_Street2;
    Property SellerPaymentAddress_CityName: String read getSellerPaymentAddress_CityName Write SetSellerPaymentAddress_CityName;
    Property SellerPaymentAddress_County: String read getSellerPaymentAddress_County Write SetSellerPaymentAddress_County;
    Property SellerPaymentAddress_StateOrProvince: String read getSellerPaymentAddress_StateOrProvince Write SetSellerPaymentAddress_StateOrProvince;
    Property SellerPaymentAddress_Country: String read getSellerPaymentAddress_Country Write SetSellerPaymentAddress_Country;
    Property SellerPaymentAddress_CountryName: String read getSellerPaymentAddress_CountryName Write SetSellerPaymentAddress_CountryName;
    Property SellerPaymentAddress_Phone: String read getSellerPaymentAddress_Phone Write SetSellerPaymentAddress_Phone;
    Property SellerPaymentAddress_PhoneCountryCode: String read getSellerPaymentAddress_PhoneCountryCode Write SetSellerPaymentAddress_PhoneCountryCode;
    Property SellerPaymentAddress_PhoneCountryPrefix: String read getSellerPaymentAddress_PhoneCountryPrefix Write SetSellerPaymentAddress_PhoneCountryPrefix;
    Property SellerPaymentAddress_PhoneAreaOrCityCode: String read getSellerPaymentAddress_PhoneAreaOrCityCode Write SetSellerPaymentAddress_PhoneAreaOrCityCode;
    Property SellerPaymentAddress_PhoneLocalNumber: String read getSellerPaymentAddress_PhoneLocalNumber Write SetSellerPaymentAddress_PhoneLocalNumber;
    Property SellerPaymentAddress_Phone2CountryCode: String read getSellerPaymentAddress_Phone2CountryCode Write SetSellerPaymentAddress_Phone2CountryCode;
    Property SellerPaymentAddress_Phone2CountryPrefix: String read getSellerPaymentAddress_Phone2CountryPrefix Write SetSellerPaymentAddress_Phone2CountryPrefix;
    Property SellerPaymentAddress_Phone2AreaOrCityCode: String read getSellerPaymentAddress_Phone2AreaOrCityCode Write SetSellerPaymentAddress_Phone2AreaOrCityCode;
    Property SellerPaymentAddress_Phone2LocalNumber: String read getSellerPaymentAddress_Phone2LocalNumber Write SetSellerPaymentAddress_Phone2LocalNumber;
    Property SellerPaymentAddress_PostalCode: String read getSellerPaymentAddress_PostalCode Write SetSellerPaymentAddress_PostalCode;
    Property SellerPaymentAddress_AddressID: String read getSellerPaymentAddress_AddressID Write SetSellerPaymentAddress_AddressID;
    Property SellerPaymentAddress_AddressOwner: String read getSellerPaymentAddress_AddressOwner Write SetSellerPaymentAddress_AddressOwner;
    Property SellerPaymentAddress_AddressStatus: String read getSellerPaymentAddress_AddressStatus Write SetSellerPaymentAddress_AddressStatus;
    Property SellerPaymentAddress_ExternalAddressID: String read getSellerPaymentAddress_ExternalAddressID Write SetSellerPaymentAddress_ExternalAddressID;
    Property SellerPaymentAddress_InternationalName: String read getSellerPaymentAddress_InternationalName Write SetSellerPaymentAddress_InternationalName;
    Property SellerPaymentAddress_InternationalStateAndCity: String read getSellerPaymentAddress_InternationalStateAndCity Write SetSellerPaymentAddress_InternationalStateAndCity;
    Property SellerPaymentAddress_InternationalStreet: String read getSellerPaymentAddress_InternationalStreet Write SetSellerPaymentAddress_InternationalStreet;
    Property SellerPaymentAddress_CompanyName: String read getSellerPaymentAddress_CompanyName Write SetSellerPaymentAddress_CompanyName;
    Property SellerPaymentAddress_AddressRecordType: String read getSellerPaymentAddress_AddressRecordType Write SetSellerPaymentAddress_AddressRecordType;
    Property SellerPaymentAddress_FirstName: String read getSellerPaymentAddress_FirstName Write SetSellerPaymentAddress_FirstName;
    Property SellerPaymentAddress_LastName: String read getSellerPaymentAddress_LastName Write SetSellerPaymentAddress_LastName;
    Property SellerPaymentAddress_Phone2: String read getSellerPaymentAddress_Phone2 Write SetSellerPaymentAddress_Phone2;
    Property SellerPaymentAddress_AddressUsage: String read getSellerPaymentAddress_AddressUsage Write SetSellerPaymentAddress_AddressUsage;
    Property SellerPaymentAddress_ReferenceID: String read getSellerPaymentAddress_ReferenceID Write SetSellerPaymentAddress_ReferenceID;
    Property SchedulingInfo_MaxScheduledMinutes: Integer read getSchedulingInfo_MaxScheduledMinutes Write SetSchedulingInfo_MaxScheduledMinutes;
    Property SchedulingInfo_MinScheduledMinutes: Integer read getSchedulingInfo_MinScheduledMinutes Write SetSchedulingInfo_MinScheduledMinutes;
    Property SchedulingInfo_MaxScheduledItems: Integer read getSchedulingInfo_MaxScheduledItems Write SetSchedulingInfo_MaxScheduledItems;
    Property FeatureEligibility_QualifiesForBuyItNow: Boolean read getFeatureEligibility_QualifiesForBuyItNow Write SetFeatureEligibility_QualifiesForBuyItNow;
    Property FeatureEligibility_QualifiesForBuyItNowMultiple: Boolean read getFeatureEligibility_QualifiesForBuyItNowMultiple Write SetFeatureEligibility_QualifiesForBuyItNowMultiple;
    Property FeatureEligibility_QualifiedForFixedPriceOneDayDuration: Boolean read getFeatureEligibility_QualifiedForFixedPriceOneDayDuration Write SetFeatureEligibility_QualifiedForFixedPriceOneDayDuration;
    Property FeatureEligibility_QualifiesForVariations: Boolean read getFeatureEligibility_QualifiesForVariations Write SetFeatureEligibility_QualifiesForVariations;
    Property FeatureEligibility_QualifiedForAuctionOneDayDuration: Boolean read getFeatureEligibility_QualifiedForAuctionOneDayDuration Write SetFeatureEligibility_QualifiedForAuctionOneDayDuration;
    Property SellereBayPaymentProcessConsent_PayoutMethodSet: Boolean read getSellereBayPaymentProcessConsent_PayoutMethodSet Write SetSellereBayPaymentProcessConsent_PayoutMethodSet;
    Property SellereBayPaymentProcessConsent_PayoutMethod: String read getSellereBayPaymentProcessConsent_PayoutMethod Write SetSellereBayPaymentProcessConsent_PayoutMethod;

(*(Array) SellereBayPaymentProcessConsent_SellereBayPaymentProcessConsent_UserAgreementInfo: Array_Of_UserAgreementInfoType  Index (IS_OPTN or IS_UNBD) read GetUserAgreementInfo write SetUserAgreementInfo stored UserAgreementInfo_Specified;
(Array) ProStoresPreference:              ProStoresCheckoutPreferenceType          Index (IS_OPTN) read GetProStoresPreference write SetProStoresPreference stored ProStoresPreference_Specified;
(Array) CharityAffiliationDetails:        CharityAffiliationDetailsType            Index (IS_OPTN) read GetCharityAffiliationDetails write SetCharityAffiliationDetails stored CharityAffiliationDetails_Specified;
(Array) TopRatedSellerDetails:            TopRatedSellerDetailsType                Index (IS_OPTN) read GetTopRatedSellerDetails write SetTopRatedSellerDetails stored TopRatedSellerDetails_Specified;
(Array) RecoupmentPolicyConsent:          RecoupmentPolicyConsentType              Index (IS_OPTN) read GetRecoupmentPolicyConsent write SetRecoupmentPolicyConsent stored RecoupmentPolicyConsent_Specified;
(Array) IntegratedMerchantCreditCardInfo: IntegratedMerchantCreditCardInfoType     Index (IS_OPTN) read GetIntegratedMerchantCreditCardInfo write SetIntegratedMerchantCreditCardInfo stored IntegratedMerchantCreditCardInfo_Specified;*)

  end;


implementation


uses sysutils;



  {Tebay_orders_trans_buyer}

constructor Tebay_orders_trans_buyer_SellerInfo.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  Tablename := 'tblebay_orders_trans_buyer_sellerinfo';
end;

{Property Functions}
function  Tebay_orders_trans_buyer_Sellerinfo.GetOrderID                                 : Integer   ; begin Result := GEtfieldValue('OrderID');end;
function  Tebay_orders_trans_buyer_Sellerinfo.GetOrders_Trans_Id                         : Integer   ; begin Result := GEtfieldValue('Orders_Trans_Id');end;
function  Tebay_orders_trans_buyer_Sellerinfo.GetOrders_Trans_buyer_Id                   : Integer   ; begin Result := GEtfieldValue('Orders_Trans_buyer_Id');end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetPaisaPayStatus: Integer ; begin result := GetFieldValue('PaisaPayStatus'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetAllowPaymentEdit: Boolean ; begin result := GetFieldValue('AllowPaymentEdit'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetBillingCurrency: String ; begin result := GetFieldValue('BillingCurrency'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetCheckoutEnabled: Boolean ; begin result := GetFieldValue('CheckoutEnabled'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetCIPBankAccountStored: Boolean ; begin result := GetFieldValue('CIPBankAccountStored'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetGoodStanding: Boolean ; begin result := GetFieldValue('GoodStanding'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetMerchandizingPref: String ; begin result := GetFieldValue('MerchandizingPref'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetQualifiesForB2BVAT: Boolean ; begin result := GetFieldValue('QualifiesForB2BVAT'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerGuaranteeLevel: String ; begin result := GetFieldValue('SellerGuaranteeLevel'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerLevel: String ; begin result := GetFieldValue('SellerLevel'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetStoreOwner: Boolean ; begin result := GetFieldValue('StoreOwner'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetStoreURL: string ; begin result := GetFieldValue('StoreURL'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerBusinessType: string ; begin result := GetFieldValue('SellerBusinessType'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetRegisteredBusinessSeller: Boolean ; begin result := GetFieldValue('RegisteredBusinessSeller'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetStoreSite: string ; begin result := GetFieldValue('StoreSite'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetCharityRegistered: Boolean ; begin result := GetFieldValue('CharityRegistered'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSafePaymentExempt: Boolean ; begin result := GetFieldValue('SafePaymentExempt'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetPaisaPayEscrowEMIStatus: Integer ; begin result := GetFieldValue('PaisaPayEscrowEMIStatus'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetTransactionPercent: Single ; begin result := GetFieldValue('TransactionPercent'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetTopRatedSeller: Boolean ; begin result := GetFieldValue('TopRatedSeller'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetDomesticRateTable: Boolean ; begin result := GetFieldValue('DomesticRateTable'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetInternationalRateTable: Boolean ; begin result := GetFieldValue('InternationalRateTable'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellereBayPaymentProcessStatus: String ; begin result := GetFieldValue('SellereBayPaymentProcessStatus'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetPaymentMethod:String; begin result := GetFieldValue('PaymentMethod'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Name_: String ; begin result := GetFieldValue('SellerPaymentAddress_Name_'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Street: String ; begin result := GetFieldValue('SellerPaymentAddress_Street'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Street1: String; begin result := GetFieldValue('SellerPaymentAddress_Street1'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Street2: String ; begin result := GetFieldValue('SellerPaymentAddress_Street2'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_CityName: String ; begin result := GetFieldValue('SellerPaymentAddress_CityName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_County: String ; begin result := GetFieldValue('SellerPaymentAddress_County'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_StateOrProvince: String ; begin result := GetFieldValue('SellerPaymentAddress_StateOrProvince'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Country: String ; begin result := GetFieldValue('SellerPaymentAddress_Country'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_CountryName: String ; begin result := GetFieldValue('SellerPaymentAddress_CountryName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_PhoneCountryCode: String ; begin result := GetFieldValue('SellerPaymentAddress_PhoneCountryCode'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_PhoneCountryPrefix: String; begin result := GetFieldValue('SellerPaymentAddress_PhoneCountryPrefix'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_PhoneAreaOrCityCode: String ; begin result := GetFieldValue('SellerPaymentAddress_PhoneAreaOrCityCode'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_PhoneLocalNumber: String ; begin result := GetFieldValue('SellerPaymentAddress_PhoneLocalNumber'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone2CountryCode: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone2CountryCode'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone2CountryPrefix: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone2CountryPrefix'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone2AreaOrCityCode: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone2AreaOrCityCode'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone2LocalNumber: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone2LocalNumber'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_PostalCode: String ; begin result := GetFieldValue('SellerPaymentAddress_PostalCode'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_AddressID: String ; begin result := GetFieldValue('SellerPaymentAddress_AddressID'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_AddressOwner: String ; begin result := GetFieldValue('SellerPaymentAddress_AddressOwner'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_AddressStatus: String ; begin result := GetFieldValue('SellerPaymentAddress_AddressStatus'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_ExternalAddressID: String ; begin result := GetFieldValue('SellerPaymentAddress_ExternalAddressID'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_InternationalName: String ; begin result := GetFieldValue('SellerPaymentAddress_InternationalName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_InternationalStateAndCity: String ; begin result := GetFieldValue('SellerPaymentAddress_InternationalStateAndCity'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_InternationalStreet: String ; begin result := GetFieldValue('SellerPaymentAddress_InternationalStreet'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_CompanyName: String ; begin result := GetFieldValue('SellerPaymentAddress_CompanyName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_AddressRecordType: String ; begin result := GetFieldValue('SellerPaymentAddress_AddressRecordType'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_FirstName: String ; begin result := GetFieldValue('SellerPaymentAddress_FirstName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_LastName: String ; begin result := GetFieldValue('SellerPaymentAddress_LastName'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_Phone2: String ; begin result := GetFieldValue('SellerPaymentAddress_Phone2'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_AddressUsage: String ; begin result := GetFieldValue('SellerPaymentAddress_AddressUsage'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellerPaymentAddress_ReferenceID: String ; begin result := GetFieldValue('SellerPaymentAddress_ReferenceID'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSchedulingInfo_MaxScheduledMinutes: Integer ; begin result := GetFieldValue('SchedulingInfo_MaxScheduledMinutes'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSchedulingInfo_MinScheduledMinutes: Integer ; begin result := GetFieldValue('SchedulingInfo_MinScheduledMinutes'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSchedulingInfo_MaxScheduledItems: Integer ; begin result := GetFieldValue('SchedulingInfo_MaxScheduledItems'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetFeatureEligibility_QualifiesForBuyItNow: Boolean ; begin result := GetFieldValue('FeatureEligibility_QualifiesForBuyItNow'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetFeatureEligibility_QualifiesForBuyItNowMultiple: Boolean ; begin result := GetFieldValue('FeatureEligibility_QualifiesForBuyItNowMultiple'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetFeatureEligibility_QualifiedForFixedPriceOneDayDuration: Boolean ; begin result := GetFieldValue('FeatureEligibility_QualifiedForFixedPriceOneDayDuration'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetFeatureEligibility_QualifiesForVariations: Boolean ; begin result := GetFieldValue('FeatureEligibility_QualifiesForVariations'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetFeatureEligibility_QualifiedForAuctionOneDayDuration: Boolean ; begin result := GetFieldValue('FeatureEligibility_QualifiedForAuctionOneDayDuration'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellereBayPaymentProcessConsent_PayoutMethodSet: Boolean ; begin result := GetFieldValue('SellereBayPaymentProcessConsent_PayoutMethodSet'); end;
Function Tebay_orders_trans_buyer_Sellerinfo.GetSellereBayPaymentProcessConsent_PayoutMethod: String; begin result := GetFieldValue('SellereBayPaymentProcessConsent_PayoutMethod'); end;

procedure Tebay_orders_trans_buyer_Sellerinfo.SetOrderID                                 (const Value: Integer    ); begin SEtfieldValue('OrderID'                                  , Value);end;
procedure Tebay_orders_trans_buyer_Sellerinfo.SetOrders_Trans_Id                         (const Value: Integer   ); begin SEtfieldValue('Orders_Trans_Id'                          , Value);end;
procedure Tebay_orders_trans_buyer_Sellerinfo.SetOrders_Trans_buyer_Id                   (const Value: Integer   ); begin SEtfieldValue('Orders_Trans_buyer_Id'                     , Value);end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetPaisaPayStatus(Const Value : Integer ); begin setfieldValue('PaisaPayStatus' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetAllowPaymentEdit(Const Value : Boolean ); begin setfieldValue('AllowPaymentEdit' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetBillingCurrency(Const Value : String ); begin setfieldValue('BillingCurrency' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetCheckoutEnabled(Const Value : Boolean ); begin setfieldValue('CheckoutEnabled' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetCIPBankAccountStored(Const Value : Boolean ); begin setfieldValue('CIPBankAccountStored' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetGoodStanding(Const Value : Boolean ); begin setfieldValue('GoodStanding' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetMerchandizingPref(Const Value : String ); begin setfieldValue('MerchandizingPref' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetQualifiesForB2BVAT(Const Value : Boolean ); begin setfieldValue('QualifiesForB2BVAT' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerGuaranteeLevel(Const Value : String ); begin setfieldValue('SellerGuaranteeLevel' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerLevel(Const Value : String ); begin setfieldValue('SellerLevel' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetStoreOwner(Const Value : Boolean ); begin setfieldValue('StoreOwner' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetStoreURL(Const Value : string ); begin setfieldValue('StoreURL' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerBusinessType(Const Value : string ); begin setfieldValue('SellerBusinessType' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetRegisteredBusinessSeller(Const Value : Boolean ); begin setfieldValue('RegisteredBusinessSeller' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetStoreSite(Const Value : string ); begin setfieldValue('StoreSite' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetCharityRegistered(Const Value : Boolean ); begin setfieldValue('CharityRegistered' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSafePaymentExempt(Const Value : Boolean ); begin setfieldValue('SafePaymentExempt' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetPaisaPayEscrowEMIStatus(Const Value : Integer ); begin setfieldValue('PaisaPayEscrowEMIStatus' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetTransactionPercent(Const Value : Single ); begin setfieldValue('TransactionPercent' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetTopRatedSeller(Const Value : Boolean ); begin setfieldValue('TopRatedSeller' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetDomesticRateTable(Const Value : Boolean ); begin setfieldValue('DomesticRateTable' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetInternationalRateTable(Const Value : Boolean ); begin setfieldValue('InternationalRateTable' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellereBayPaymentProcessStatus(Const Value : String ); begin setfieldValue('SellereBayPaymentProcessStatus' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetPaymentMethod(Const Value :String); begin setfieldValue('PaymentMethod' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Name_(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Name_' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Street(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Street' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Street1(Const Value : String); begin setfieldValue('SellerPaymentAddress_Street1' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Street2(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Street2' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_CityName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_CityName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_County(Const Value : String ); begin setfieldValue('SellerPaymentAddress_County' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_StateOrProvince(Const Value : String ); begin setfieldValue('SellerPaymentAddress_StateOrProvince' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Country(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Country' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_CountryName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_CountryName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_PhoneCountryCode(Const Value : String ); begin setfieldValue('SellerPaymentAddress_PhoneCountryCode' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_PhoneCountryPrefix(Const Value : String); begin setfieldValue('SellerPaymentAddress_PhoneCountryPrefix' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_PhoneAreaOrCityCode(Const Value : String ); begin setfieldValue('SellerPaymentAddress_PhoneAreaOrCityCode' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_PhoneLocalNumber(Const Value : String ); begin setfieldValue('SellerPaymentAddress_PhoneLocalNumber' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone2CountryCode(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone2CountryCode' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone2CountryPrefix(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone2CountryPrefix' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone2AreaOrCityCode(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone2AreaOrCityCode' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone2LocalNumber(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone2LocalNumber' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_PostalCode(Const Value : String ); begin setfieldValue('SellerPaymentAddress_PostalCode' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_AddressID(Const Value : String ); begin setfieldValue('SellerPaymentAddress_AddressID' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_AddressOwner(Const Value : String ); begin setfieldValue('SellerPaymentAddress_AddressOwner' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_AddressStatus(Const Value : String ); begin setfieldValue('SellerPaymentAddress_AddressStatus' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_ExternalAddressID(Const Value : String ); begin setfieldValue('SellerPaymentAddress_ExternalAddressID' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_InternationalName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_InternationalName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_InternationalStateAndCity(Const Value : String ); begin setfieldValue('SellerPaymentAddress_InternationalStateAndCity' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_InternationalStreet(Const Value : String ); begin setfieldValue('SellerPaymentAddress_InternationalStreet' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_CompanyName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_CompanyName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_AddressRecordType(Const Value : String ); begin setfieldValue('SellerPaymentAddress_AddressRecordType' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_FirstName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_FirstName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_LastName(Const Value : String ); begin setfieldValue('SellerPaymentAddress_LastName' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_Phone2(Const Value : String ); begin setfieldValue('SellerPaymentAddress_Phone2' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_AddressUsage(Const Value : String ); begin setfieldValue('SellerPaymentAddress_AddressUsage' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellerPaymentAddress_ReferenceID(Const Value : String ); begin setfieldValue('SellerPaymentAddress_ReferenceID' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSchedulingInfo_MaxScheduledMinutes(Const Value : Integer ); begin setfieldValue('SchedulingInfo_MaxScheduledMinutes' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSchedulingInfo_MinScheduledMinutes(Const Value : Integer ); begin setfieldValue('SchedulingInfo_MinScheduledMinutes' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSchedulingInfo_MaxScheduledItems(Const Value : Integer ); begin setfieldValue('SchedulingInfo_MaxScheduledItems' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetFeatureEligibility_QualifiesForBuyItNow(Const Value : Boolean ); begin setfieldValue('FeatureEligibility_QualifiesForBuyItNow' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetFeatureEligibility_QualifiesForBuyItNowMultiple(Const Value : Boolean ); begin setfieldValue('FeatureEligibility_QualifiesForBuyItNowMultiple' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetFeatureEligibility_QualifiedForFixedPriceOneDayDuration(Const Value : Boolean ); begin setfieldValue('FeatureEligibility_QualifiedForFixedPriceOneDayDuration' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetFeatureEligibility_QualifiesForVariations(Const Value : Boolean ); begin setfieldValue('FeatureEligibility_QualifiesForVariations' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetFeatureEligibility_QualifiedForAuctionOneDayDuration(Const Value : Boolean ); begin setfieldValue('FeatureEligibility_QualifiedForAuctionOneDayDuration' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellereBayPaymentProcessConsent_PayoutMethodSet(Const Value : Boolean ); begin setfieldValue('SellereBayPaymentProcessConsent_PayoutMethodSet' , Value); end;
Procedure Tebay_orders_trans_buyer_Sellerinfo.SetSellereBayPaymentProcessConsent_PayoutMethod(Const Value : String); begin setfieldValue('SellereBayPaymentProcessConsent_PayoutMethod' , Value); end;

initialization
  RegisterClass(Tebay_orders_trans_buyer_Sellerinfo);
end.
